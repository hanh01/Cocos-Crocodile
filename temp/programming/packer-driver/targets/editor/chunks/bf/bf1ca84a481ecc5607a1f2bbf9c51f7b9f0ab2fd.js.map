{"version":3,"sources":["file:///Volumes/Data/GameSlots/GameMini/Crocodile/assets/scripts/Tooth.ts"],"names":["_decorator","Component","Node","size","tween","UITransform","AudioMgr","GameConfig","ccclass","property","Tooth","index","clickEvent","onLoad","reset","touchEnd","e","console","log","inst","play","tooth","targetOff","getComponent","to","TIME_CICK","contentSize","TOOTH_SZIE","width","TOOTH_HEIGTH_CLICK","call","start","on","EventType","TOUCH_END","bind","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAuBC,MAAAA,I,OAAAA,I;AAAqBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,W,OAAAA,W;;AACrEC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,U,iBAAAA,U;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;uBAGjBU,K,WADZF,OAAO,CAAC,OAAD,C,UAGHC,QAAQ,CAACP,IAAD,C,2BAHb,MACaQ,KADb,SAC2BT,SAD3B,CACqC;AAAA;AAAA;AAAA,eAC1BU,KAD0B,GACV,CAAC,CADS;;AAAA;;AAAA,eAOjCC,UAPiC;AAAA;;AAIvBC,QAAAA,MAAM,GAAS;AACrB,eAAKC,KAAL;AACH;;AAEDC,QAAAA,QAAQ,CAACC,CAAD,EAAgB;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AACA,cAAI,KAAKL,KAAL,IAAc,CAAC,CAAnB,EAAsB;AAClB;AAAA;AAAA,sCAASQ,IAAT,CAAcC,IAAd,CAAmB,cAAnB;AACA,iBAAKC,KAAL,CAAWC,SAAX,CAAqB,IAArB;AACAlB,YAAAA,KAAK,CAAC,KAAKiB,KAAL,CAAWE,YAAX,CAAwBlB,WAAxB,CAAD,CAAL,CAA4CmB,EAA5C,CAA+C;AAAA;AAAA,0CAAWC,SAA1D,EAAqE;AACjEC,cAAAA,WAAW,EAAEvB,IAAI,CAAC;AAAA;AAAA,4CAAWwB,UAAX,CAAsBC,KAAvB,EAA8B;AAAA;AAAA,4CAAWC,kBAAzC;AADgD,aAArE,EAEGC,IAFH,CAEQ,MAAM,KAAKlB,UAAL,CAAgB,KAAKD,KAArB,CAFd,EAE2CoB,KAF3C;AAGH,WAND,MAMO;AACH,iBAAKV,KAAL,CAAWE,YAAX,CAAwBlB,WAAxB,EAAqCqB,WAArC,GAAmD;AAAA;AAAA,0CAAWC,UAA9D;AACH;AAEJ;;AACDb,QAAAA,KAAK,GAAS;AACV,eAAKO,KAAL,CAAWW,EAAX,CAAc9B,IAAI,CAAC+B,SAAL,CAAeC,SAA7B,EAAwC,KAAKnB,QAAL,CAAcoB,IAAd,CAAmB,IAAnB,CAAxC,EAAkE,IAAlE;AACH;;AACDJ,QAAAA,KAAK,GAAG,CACP;;AAEDK,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA7BgC,O;;;;;iBAGV,I","sourcesContent":["import { _decorator, Component, EventTouch, Node, NodeEventType, size, tween, UITransform } from 'cc';\nimport { AudioMgr } from './AudioMgr';\nimport { GameConfig } from './Config';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Tooth')\nexport class Tooth extends Component {\n    public index: number = -1;\n    @property(Node)\n    readonly tooth: Node = null;\n    protected onLoad(): void {\n        this.reset();\n    }\n    clickEvent: (index: number) => void\n    touchEnd(e: EventTouch) {\n        console.log(e);\n        if (this.index != -1) {\n            AudioMgr.inst.play(\"sounds/click\");\n            this.tooth.targetOff(this);\n            tween(this.tooth.getComponent(UITransform)).to(GameConfig.TIME_CICK, {\n                contentSize: size(GameConfig.TOOTH_SZIE.width, GameConfig.TOOTH_HEIGTH_CLICK)\n            }).call(() => this.clickEvent(this.index)).start();\n        } else {\n            this.tooth.getComponent(UITransform).contentSize = GameConfig.TOOTH_SZIE;\n        }\n\n    }\n    reset(): void {\n        this.tooth.on(Node.EventType.TOUCH_END, this.touchEnd.bind(this), this)\n    }\n    start() {\n    }\n\n    update(deltaTime: number) {\n\n    }\n}\n\n"]}